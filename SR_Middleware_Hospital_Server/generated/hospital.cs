// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `hospital.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace Hospital
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class Parameter : Ice.Object
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public string name;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public double value;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public Parameter()
        {
            name = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public Parameter(string name, double value)
        {
            this.name = name;
            this.value = value;
        }

        #endregion

        #region Slice type-related members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public static readonly string[] ids__ = 
        {
            "::Hospital::Parameter",
            "::Ice::Object"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_ping()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_ping(Ice.Current current__)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string[] ice_ids()
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string ice_id()
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request, Ice.DispatchInterceptorAsyncCallback cb)
        {
            IceInternal.Incoming inc = (IceInternal.Incoming)request;
            if(cb != null)
            {
                inc.push(cb);
            }
            try
            {
                inc.startOver();
                return dispatch__(inc, inc.getCurrent());
            }
            finally
            {
                if(cb != null)
                {
                    inc.pop();
                }
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request)
        {
            return ice_dispatch(request, null);
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 1:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_preMarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_postUnmarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void write__(IceInternal.BasicStream os__)
        {
            os__.startWriteObject(null);
            writeImpl__(os__);
            os__.endWriteObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void read__(IceInternal.BasicStream is__)
        {
            is__.startReadObject();
            readImpl__(is__);
            is__.endReadObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void write__(Ice.OutputStream outS__)
        {
            outS__.startObject(null);
            writeImpl__(outS__);
            outS__.endObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void read__(Ice.InputStream inS__)
        {
            inS__.startObject();
            readImpl__(inS__);
            inS__.endObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.writeString(name);
            os__.writeDouble(value);
            os__.endWriteSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            name = is__.readString();
            value = is__.readDouble();
            is__.endReadSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void writeImpl__(Ice.OutputStream os__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void readImpl__(Ice.InputStream is__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class Group : Ice.Object
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public string name;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public _System.Collections.Generic.List<Hospital.Parameter> listOfParams;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public Group()
        {
            name = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public Group(string name, _System.Collections.Generic.List<Hospital.Parameter> listOfParams)
        {
            this.name = name;
            this.listOfParams = listOfParams;
        }

        #endregion

        #region Slice type-related members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public static readonly string[] ids__ = 
        {
            "::Hospital::Group",
            "::Ice::Object"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_ping()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_ping(Ice.Current current__)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string[] ice_ids()
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string ice_id()
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request, Ice.DispatchInterceptorAsyncCallback cb)
        {
            IceInternal.Incoming inc = (IceInternal.Incoming)request;
            if(cb != null)
            {
                inc.push(cb);
            }
            try
            {
                inc.startOver();
                return dispatch__(inc, inc.getCurrent());
            }
            finally
            {
                if(cb != null)
                {
                    inc.pop();
                }
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request)
        {
            return ice_dispatch(request, null);
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 1:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_preMarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_postUnmarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void write__(IceInternal.BasicStream os__)
        {
            os__.startWriteObject(null);
            writeImpl__(os__);
            os__.endWriteObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void read__(IceInternal.BasicStream is__)
        {
            is__.startReadObject();
            readImpl__(is__);
            is__.endReadObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void write__(Ice.OutputStream outS__)
        {
            outS__.startObject(null);
            writeImpl__(outS__);
            outS__.endObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void read__(Ice.InputStream inS__)
        {
            inS__.startObject();
            readImpl__(inS__);
            inS__.endObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.writeString(name);
            Hospital.ListOfParametersHelper.write(os__, listOfParams);
            os__.endWriteSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            name = is__.readString();
            listOfParams = Hospital.ListOfParametersHelper.read(is__);
            is__.endReadSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void writeImpl__(Ice.OutputStream os__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void readImpl__(Ice.InputStream is__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class Examination : Ice.Object
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public string patientName;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public string date;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public string doctorName;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public _System.Collections.Generic.List<Hospital.Group> listOfGroups;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public Examination()
        {
            patientName = "";
            date = "";
            doctorName = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public Examination(string patientName, string date, string doctorName, _System.Collections.Generic.List<Hospital.Group> listOfGroups)
        {
            this.patientName = patientName;
            this.date = date;
            this.doctorName = doctorName;
            this.listOfGroups = listOfGroups;
        }

        #endregion

        #region Slice type-related members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public static readonly string[] ids__ = 
        {
            "::Hospital::Examination",
            "::Ice::Object"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_ping()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_ping(Ice.Current current__)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string[] ice_ids()
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string ice_id()
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request, Ice.DispatchInterceptorAsyncCallback cb)
        {
            IceInternal.Incoming inc = (IceInternal.Incoming)request;
            if(cb != null)
            {
                inc.push(cb);
            }
            try
            {
                inc.startOver();
                return dispatch__(inc, inc.getCurrent());
            }
            finally
            {
                if(cb != null)
                {
                    inc.pop();
                }
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request)
        {
            return ice_dispatch(request, null);
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 1:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_preMarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_postUnmarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void write__(IceInternal.BasicStream os__)
        {
            os__.startWriteObject(null);
            writeImpl__(os__);
            os__.endWriteObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void read__(IceInternal.BasicStream is__)
        {
            is__.startReadObject();
            readImpl__(is__);
            is__.endReadObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void write__(Ice.OutputStream outS__)
        {
            outS__.startObject(null);
            writeImpl__(outS__);
            outS__.endObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void read__(Ice.InputStream inS__)
        {
            inS__.startObject();
            readImpl__(inS__);
            inS__.endObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.writeString(patientName);
            os__.writeString(date);
            os__.writeString(doctorName);
            Hospital.ListOfGroupsHelper.write(os__, listOfGroups);
            os__.endWriteSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            patientName = is__.readString();
            date = is__.readString();
            doctorName = is__.readString();
            listOfGroups = Hospital.ListOfGroupsHelper.read(is__);
            is__.endReadSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void writeImpl__(Ice.OutputStream os__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void readImpl__(Ice.InputStream is__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
    [_System.Serializable]
#endif
    public partial class PatientRecord : Ice.Object
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public string firstName;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public string lastName;

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public _System.Collections.Generic.List<Hospital.Examination> listOfExaminations;

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public PatientRecord()
        {
            firstName = "";
            lastName = "";
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public PatientRecord(string firstName, string lastName, _System.Collections.Generic.List<Hospital.Examination> listOfExaminations)
        {
            this.firstName = firstName;
            this.lastName = lastName;
            this.listOfExaminations = listOfExaminations;
        }

        #endregion

        #region Slice type-related members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public static readonly string[] ids__ = 
        {
            "::Hospital::PatientRecord",
            "::Ice::Object"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_ping()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_ping(Ice.Current current__)
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string[] ice_ids()
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string ice_id()
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request, Ice.DispatchInterceptorAsyncCallback cb)
        {
            IceInternal.Incoming inc = (IceInternal.Incoming)request;
            if(cb != null)
            {
                inc.push(cb);
            }
            try
            {
                inc.startOver();
                return dispatch__(inc, inc.getCurrent());
            }
            finally
            {
                if(cb != null)
                {
                    inc.pop();
                }
            }
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus ice_dispatch(Ice.Request request)
        {
            return ice_dispatch(request, null);
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 1:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_preMarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void ice_postUnmarshal()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void write__(IceInternal.BasicStream os__)
        {
            os__.startWriteObject(null);
            writeImpl__(os__);
            os__.endWriteObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void read__(IceInternal.BasicStream is__)
        {
            is__.startReadObject();
            readImpl__(is__);
            is__.endReadObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void write__(Ice.OutputStream outS__)
        {
            outS__.startObject(null);
            writeImpl__(outS__);
            outS__.endObject();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public virtual void read__(Ice.InputStream inS__)
        {
            inS__.startObject();
            readImpl__(inS__);
            inS__.endObject(false);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.writeString(firstName);
            os__.writeString(lastName);
            Hospital.ListOfExaminationsHelper.write(os__, listOfExaminations);
            os__.endWriteSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            firstName = is__.readString();
            lastName = is__.readString();
            listOfExaminations = Hospital.ListOfExaminationsHelper.read(is__);
            is__.endReadSlice();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void writeImpl__(Ice.OutputStream os__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        protected virtual void readImpl__(Ice.InputStream is__)
        {
            throw new Ice.MarshalException("class was not generated with stream support");
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface LabWorker : Ice.Object, LabWorkerOperations_, LabWorkerOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Patient : Ice.Object, PatientOperations_, PatientOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Doctor : Ice.Object, DoctorOperations_, DoctorOperationsNC_
    {
    }
}

namespace Hospital
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public delegate void Callback_LabWorker_addExamination();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public delegate void Callback_Patient_getRecord(Hospital.PatientRecord ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public delegate void Callback_Doctor_getRecords(_System.Collections.Generic.List<Hospital.PatientRecord> ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public delegate void Callback_Doctor_getRecord(Hospital.PatientRecord ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public delegate void Callback_Doctor_MVCMoreThanFifty(_System.Collections.Generic.List<Hospital.PatientRecord> ret__);
}

namespace Hospital
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface ParameterPrx : Ice.ObjectPrx
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface GroupPrx : Ice.ObjectPrx
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface ExaminationPrx : Ice.ObjectPrx
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface PatientRecordPrx : Ice.ObjectPrx
    {
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface LabWorkerPrx : Ice.ObjectPrx
    {
        void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName);

        void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<Hospital.Callback_LabWorker_addExamination> begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName);

        Ice.AsyncResult<Hospital.Callback_LabWorker_addExamination> begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_addExamination(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface PatientPrx : Ice.ObjectPrx
    {
        Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName);

        Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<Hospital.Callback_Patient_getRecord> begin_getRecord(string patientFirstName, string patientLastName);

        Ice.AsyncResult<Hospital.Callback_Patient_getRecord> begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getRecord(string patientFirstName, string patientLastName, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Hospital.PatientRecord end_getRecord(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface DoctorPrx : Ice.ObjectPrx
    {
        _System.Collections.Generic.List<Hospital.PatientRecord> getRecords();

        _System.Collections.Generic.List<Hospital.PatientRecord> getRecords(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<Hospital.Callback_Doctor_getRecords> begin_getRecords();

        Ice.AsyncResult<Hospital.Callback_Doctor_getRecords> begin_getRecords(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getRecords(Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_getRecords(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        _System.Collections.Generic.List<Hospital.PatientRecord> end_getRecords(Ice.AsyncResult r__);

        Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName);

        Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<Hospital.Callback_Doctor_getRecord> begin_getRecord(string patientFirstName, string patientLastName);

        Ice.AsyncResult<Hospital.Callback_Doctor_getRecord> begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getRecord(string patientFirstName, string patientLastName, Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Hospital.PatientRecord end_getRecord(Ice.AsyncResult r__);

        _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty();

        _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult<Hospital.Callback_Doctor_MVCMoreThanFifty> begin_MVCMoreThanFifty();

        Ice.AsyncResult<Hospital.Callback_Doctor_MVCMoreThanFifty> begin_MVCMoreThanFifty(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_MVCMoreThanFifty(Ice.AsyncCallback cb__, object cookie__);

        Ice.AsyncResult begin_MVCMoreThanFifty(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        _System.Collections.Generic.List<Hospital.PatientRecord> end_MVCMoreThanFifty(Ice.AsyncResult r__);
    }
}

namespace Hospital
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface LabWorkerOperations_
    {
        void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface LabWorkerOperationsNC_
    {
        void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface PatientOperations_
    {
        Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface PatientOperationsNC_
    {
        Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface DoctorOperations_
    {
        _System.Collections.Generic.List<Hospital.PatientRecord> getRecords(Ice.Current current__);

        Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, Ice.Current current__);

        _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty(Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public interface DoctorOperationsNC_
    {
        _System.Collections.Generic.List<Hospital.PatientRecord> getRecords();

        Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName);

        _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty();
    }
}

namespace Hospital
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class ParameterPrxHelper : Ice.ObjectPrxHelperBase, ParameterPrx
    {
        #region Asynchronous operations

        #endregion

        #region Checked and unchecked cast operations

        public static ParameterPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ParameterPrx r = b as ParameterPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                ParameterPrxHelper h = new ParameterPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ParameterPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            ParameterPrx r = b as ParameterPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ParameterPrxHelper h = new ParameterPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ParameterPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    ParameterPrxHelper h = new ParameterPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ParameterPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    ParameterPrxHelper h = new ParameterPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ParameterPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ParameterPrx r = b as ParameterPrx;
            if(r == null)
            {
                ParameterPrxHelper h = new ParameterPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ParameterPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            ParameterPrxHelper h = new ParameterPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Hospital::Parameter",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, ParameterPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static ParameterPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                ParameterPrxHelper result = new ParameterPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class ListOfParametersHelper
    {
        public static void write(IceInternal.BasicStream os__, _System.Collections.Generic.List<Hospital.Parameter> v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Count);
                for(int ix__ = 0; ix__ < v__.Count; ++ix__)
                {
                    os__.writeObject(v__[ix__]);
                }
            }
        }

        public static _System.Collections.Generic.List<Hospital.Parameter> read(IceInternal.BasicStream is__)
        {
            _System.Collections.Generic.List<Hospital.Parameter> v__;
            {
                int szx__ = is__.readAndCheckSeqSize(1);
                v__ = new _System.Collections.Generic.List<Hospital.Parameter>(szx__);
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    IceInternal.ListPatcher<Hospital.Parameter> spx = new IceInternal.ListPatcher<Hospital.Parameter>("::Hospital::Parameter", v__, ix__);
                    is__.readObject(spx);
                }
            }
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class GroupPrxHelper : Ice.ObjectPrxHelperBase, GroupPrx
    {
        #region Asynchronous operations

        #endregion

        #region Checked and unchecked cast operations

        public static GroupPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GroupPrx r = b as GroupPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                GroupPrxHelper h = new GroupPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GroupPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            GroupPrx r = b as GroupPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                GroupPrxHelper h = new GroupPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GroupPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    GroupPrxHelper h = new GroupPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GroupPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    GroupPrxHelper h = new GroupPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static GroupPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            GroupPrx r = b as GroupPrx;
            if(r == null)
            {
                GroupPrxHelper h = new GroupPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static GroupPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            GroupPrxHelper h = new GroupPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Hospital::Group",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, GroupPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static GroupPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                GroupPrxHelper result = new GroupPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class ListOfGroupsHelper
    {
        public static void write(IceInternal.BasicStream os__, _System.Collections.Generic.List<Hospital.Group> v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Count);
                for(int ix__ = 0; ix__ < v__.Count; ++ix__)
                {
                    os__.writeObject(v__[ix__]);
                }
            }
        }

        public static _System.Collections.Generic.List<Hospital.Group> read(IceInternal.BasicStream is__)
        {
            _System.Collections.Generic.List<Hospital.Group> v__;
            {
                int szx__ = is__.readAndCheckSeqSize(1);
                v__ = new _System.Collections.Generic.List<Hospital.Group>(szx__);
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    IceInternal.ListPatcher<Hospital.Group> spx = new IceInternal.ListPatcher<Hospital.Group>("::Hospital::Group", v__, ix__);
                    is__.readObject(spx);
                }
            }
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class ExaminationPrxHelper : Ice.ObjectPrxHelperBase, ExaminationPrx
    {
        #region Asynchronous operations

        #endregion

        #region Checked and unchecked cast operations

        public static ExaminationPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ExaminationPrx r = b as ExaminationPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                ExaminationPrxHelper h = new ExaminationPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ExaminationPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            ExaminationPrx r = b as ExaminationPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ExaminationPrxHelper h = new ExaminationPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ExaminationPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    ExaminationPrxHelper h = new ExaminationPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ExaminationPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    ExaminationPrxHelper h = new ExaminationPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ExaminationPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ExaminationPrx r = b as ExaminationPrx;
            if(r == null)
            {
                ExaminationPrxHelper h = new ExaminationPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ExaminationPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            ExaminationPrxHelper h = new ExaminationPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Hospital::Examination",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, ExaminationPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static ExaminationPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                ExaminationPrxHelper result = new ExaminationPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class ListOfExaminationsHelper
    {
        public static void write(IceInternal.BasicStream os__, _System.Collections.Generic.List<Hospital.Examination> v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Count);
                for(int ix__ = 0; ix__ < v__.Count; ++ix__)
                {
                    os__.writeObject(v__[ix__]);
                }
            }
        }

        public static _System.Collections.Generic.List<Hospital.Examination> read(IceInternal.BasicStream is__)
        {
            _System.Collections.Generic.List<Hospital.Examination> v__;
            {
                int szx__ = is__.readAndCheckSeqSize(1);
                v__ = new _System.Collections.Generic.List<Hospital.Examination>(szx__);
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    IceInternal.ListPatcher<Hospital.Examination> spx = new IceInternal.ListPatcher<Hospital.Examination>("::Hospital::Examination", v__, ix__);
                    is__.readObject(spx);
                }
            }
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class PatientRecordPrxHelper : Ice.ObjectPrxHelperBase, PatientRecordPrx
    {
        #region Asynchronous operations

        #endregion

        #region Checked and unchecked cast operations

        public static PatientRecordPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            PatientRecordPrx r = b as PatientRecordPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                PatientRecordPrxHelper h = new PatientRecordPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PatientRecordPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            PatientRecordPrx r = b as PatientRecordPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                PatientRecordPrxHelper h = new PatientRecordPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PatientRecordPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    PatientRecordPrxHelper h = new PatientRecordPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static PatientRecordPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    PatientRecordPrxHelper h = new PatientRecordPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static PatientRecordPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            PatientRecordPrx r = b as PatientRecordPrx;
            if(r == null)
            {
                PatientRecordPrxHelper h = new PatientRecordPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PatientRecordPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            PatientRecordPrxHelper h = new PatientRecordPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Hospital::PatientRecord",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, PatientRecordPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static PatientRecordPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                PatientRecordPrxHelper result = new PatientRecordPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class recordsHelper
    {
        public static void write(IceInternal.BasicStream os__, _System.Collections.Generic.List<Hospital.PatientRecord> v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Count);
                for(int ix__ = 0; ix__ < v__.Count; ++ix__)
                {
                    os__.writeObject(v__[ix__]);
                }
            }
        }

        public static _System.Collections.Generic.List<Hospital.PatientRecord> read(IceInternal.BasicStream is__)
        {
            _System.Collections.Generic.List<Hospital.PatientRecord> v__;
            {
                int szx__ = is__.readAndCheckSeqSize(1);
                v__ = new _System.Collections.Generic.List<Hospital.PatientRecord>(szx__);
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    IceInternal.ListPatcher<Hospital.PatientRecord> spx = new IceInternal.ListPatcher<Hospital.PatientRecord>("::Hospital::PatientRecord", v__, ix__);
                    is__.readObject(spx);
                }
            }
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class LabWorkerPrxHelper : Ice.ObjectPrxHelperBase, LabWorkerPrx
    {
        #region Synchronous operations

        public void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName)
        {
            this.addExamination(examination, patientFirstName, patientLastName, null, false);
        }

        public void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            this.addExamination(examination, patientFirstName, patientLastName, ctx__, true);
        }

        private void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            end_addExamination(begin_addExamination(examination, patientFirstName, patientLastName, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Hospital.Callback_LabWorker_addExamination> begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName)
        {
            return begin_addExamination(examination, patientFirstName, patientLastName, null, false, false, null, null);
        }

        public Ice.AsyncResult<Hospital.Callback_LabWorker_addExamination> begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addExamination(examination, patientFirstName, patientLastName, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addExamination(examination, patientFirstName, patientLastName, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addExamination(examination, patientFirstName, patientLastName, ctx__, true, false, cb__, cookie__);
        }

        private const string __addExamination_name = "addExamination";

        public void end_addExamination(Ice.AsyncResult r__)
        {
            end__(r__, __addExamination_name);
        }

        private Ice.AsyncResult<Hospital.Callback_LabWorker_addExamination> begin_addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Hospital.Callback_LabWorker_addExamination> result__ = getOnewayOutgoingAsync<Hospital.Callback_LabWorker_addExamination>(__addExamination_name, addExamination_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__addExamination_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeObject(examination);
                os__.writeString(patientFirstName);
                os__.writeString(patientLastName);
                os__.writePendingObjects();
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void addExamination_completed__(Hospital.Callback_LabWorker_addExamination cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static LabWorkerPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            LabWorkerPrx r = b as LabWorkerPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                LabWorkerPrxHelper h = new LabWorkerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static LabWorkerPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            LabWorkerPrx r = b as LabWorkerPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                LabWorkerPrxHelper h = new LabWorkerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static LabWorkerPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    LabWorkerPrxHelper h = new LabWorkerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static LabWorkerPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    LabWorkerPrxHelper h = new LabWorkerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static LabWorkerPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            LabWorkerPrx r = b as LabWorkerPrx;
            if(r == null)
            {
                LabWorkerPrxHelper h = new LabWorkerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static LabWorkerPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            LabWorkerPrxHelper h = new LabWorkerPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Hospital::LabWorker",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, LabWorkerPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static LabWorkerPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                LabWorkerPrxHelper result = new LabWorkerPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class PatientPrxHelper : Ice.ObjectPrxHelperBase, PatientPrx
    {
        #region Synchronous operations

        public Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName)
        {
            return this.getRecord(patientFirstName, patientLastName, null, false);
        }

        public Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.getRecord(patientFirstName, patientLastName, ctx__, true);
        }

        private Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getRecord_name);
            return end_getRecord(begin_getRecord(patientFirstName, patientLastName, context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Hospital.Callback_Patient_getRecord> begin_getRecord(string patientFirstName, string patientLastName)
        {
            return begin_getRecord(patientFirstName, patientLastName, null, false, false, null, null);
        }

        public Ice.AsyncResult<Hospital.Callback_Patient_getRecord> begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getRecord(patientFirstName, patientLastName, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getRecord(string patientFirstName, string patientLastName, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getRecord(patientFirstName, patientLastName, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getRecord(patientFirstName, patientLastName, ctx__, true, false, cb__, cookie__);
        }

        private const string __getRecord_name = "getRecord";

        public Hospital.PatientRecord end_getRecord(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getRecord_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Hospital.PatientRecord ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                IceInternal.ParamPatcher<Hospital.PatientRecord> ret__PP = new IceInternal.ParamPatcher<Hospital.PatientRecord>(Hospital.PatientRecord.ice_staticId());
                is__.readObject(ret__PP);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                ret__ = ret__PP.value;
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Hospital.Callback_Patient_getRecord> begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getRecord_name);
            IceInternal.TwowayOutgoingAsync<Hospital.Callback_Patient_getRecord> result__ =  getTwowayOutgoingAsync<Hospital.Callback_Patient_getRecord>(__getRecord_name, getRecord_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getRecord_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(patientFirstName);
                os__.writeString(patientLastName);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getRecord_completed__(Ice.AsyncResult r__, Hospital.Callback_Patient_getRecord cb__, Ice.ExceptionCallback excb__)
        {
            Hospital.PatientRecord ret__;
            try
            {
                ret__ = end_getRecord(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static PatientPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            PatientPrx r = b as PatientPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                PatientPrxHelper h = new PatientPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PatientPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            PatientPrx r = b as PatientPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                PatientPrxHelper h = new PatientPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PatientPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    PatientPrxHelper h = new PatientPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static PatientPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    PatientPrxHelper h = new PatientPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static PatientPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            PatientPrx r = b as PatientPrx;
            if(r == null)
            {
                PatientPrxHelper h = new PatientPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static PatientPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            PatientPrxHelper h = new PatientPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Hospital::Patient",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, PatientPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static PatientPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                PatientPrxHelper result = new PatientPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public sealed class DoctorPrxHelper : Ice.ObjectPrxHelperBase, DoctorPrx
    {
        #region Synchronous operations

        public _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty()
        {
            return this.MVCMoreThanFifty(null, false);
        }

        public _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.MVCMoreThanFifty(ctx__, true);
        }

        private _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__MVCMoreThanFifty_name);
            return end_MVCMoreThanFifty(begin_MVCMoreThanFifty(context__, explicitCtx__, true, null, null));
        }

        public Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName)
        {
            return this.getRecord(patientFirstName, patientLastName, null, false);
        }

        public Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.getRecord(patientFirstName, patientLastName, ctx__, true);
        }

        private Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getRecord_name);
            return end_getRecord(begin_getRecord(patientFirstName, patientLastName, context__, explicitCtx__, true, null, null));
        }

        public _System.Collections.Generic.List<Hospital.PatientRecord> getRecords()
        {
            return this.getRecords(null, false);
        }

        public _System.Collections.Generic.List<Hospital.PatientRecord> getRecords(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return this.getRecords(ctx__, true);
        }

        private _System.Collections.Generic.List<Hospital.PatientRecord> getRecords(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
        {
            checkTwowayOnly__(__getRecords_name);
            return end_getRecords(begin_getRecords(context__, explicitCtx__, true, null, null));
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Hospital.Callback_Doctor_MVCMoreThanFifty> begin_MVCMoreThanFifty()
        {
            return begin_MVCMoreThanFifty(null, false, false, null, null);
        }

        public Ice.AsyncResult<Hospital.Callback_Doctor_MVCMoreThanFifty> begin_MVCMoreThanFifty(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_MVCMoreThanFifty(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_MVCMoreThanFifty(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_MVCMoreThanFifty(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_MVCMoreThanFifty(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_MVCMoreThanFifty(ctx__, true, false, cb__, cookie__);
        }

        private const string __MVCMoreThanFifty_name = "MVCMoreThanFifty";

        public _System.Collections.Generic.List<Hospital.PatientRecord> end_MVCMoreThanFifty(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __MVCMoreThanFifty_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                _System.Collections.Generic.List<Hospital.PatientRecord> ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Hospital.recordsHelper.read(is__);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Hospital.Callback_Doctor_MVCMoreThanFifty> begin_MVCMoreThanFifty(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__MVCMoreThanFifty_name);
            IceInternal.TwowayOutgoingAsync<Hospital.Callback_Doctor_MVCMoreThanFifty> result__ =  getTwowayOutgoingAsync<Hospital.Callback_Doctor_MVCMoreThanFifty>(__MVCMoreThanFifty_name, MVCMoreThanFifty_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__MVCMoreThanFifty_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void MVCMoreThanFifty_completed__(Ice.AsyncResult r__, Hospital.Callback_Doctor_MVCMoreThanFifty cb__, Ice.ExceptionCallback excb__)
        {
            _System.Collections.Generic.List<Hospital.PatientRecord> ret__;
            try
            {
                ret__ = end_MVCMoreThanFifty(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Hospital.Callback_Doctor_getRecord> begin_getRecord(string patientFirstName, string patientLastName)
        {
            return begin_getRecord(patientFirstName, patientLastName, null, false, false, null, null);
        }

        public Ice.AsyncResult<Hospital.Callback_Doctor_getRecord> begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getRecord(patientFirstName, patientLastName, ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getRecord(string patientFirstName, string patientLastName, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getRecord(patientFirstName, patientLastName, null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getRecord(patientFirstName, patientLastName, ctx__, true, false, cb__, cookie__);
        }

        private const string __getRecord_name = "getRecord";

        public Hospital.PatientRecord end_getRecord(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getRecord_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Hospital.PatientRecord ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                IceInternal.ParamPatcher<Hospital.PatientRecord> ret__PP = new IceInternal.ParamPatcher<Hospital.PatientRecord>(Hospital.PatientRecord.ice_staticId());
                is__.readObject(ret__PP);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                ret__ = ret__PP.value;
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Hospital.Callback_Doctor_getRecord> begin_getRecord(string patientFirstName, string patientLastName, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getRecord_name);
            IceInternal.TwowayOutgoingAsync<Hospital.Callback_Doctor_getRecord> result__ =  getTwowayOutgoingAsync<Hospital.Callback_Doctor_getRecord>(__getRecord_name, getRecord_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getRecord_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                os__.writeString(patientFirstName);
                os__.writeString(patientLastName);
                result__.endWriteParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getRecord_completed__(Ice.AsyncResult r__, Hospital.Callback_Doctor_getRecord cb__, Ice.ExceptionCallback excb__)
        {
            Hospital.PatientRecord ret__;
            try
            {
                ret__ = end_getRecord(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Hospital.Callback_Doctor_getRecords> begin_getRecords()
        {
            return begin_getRecords(null, false, false, null, null);
        }

        public Ice.AsyncResult<Hospital.Callback_Doctor_getRecords> begin_getRecords(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getRecords(ctx__, true, false, null, null);
        }

        public Ice.AsyncResult begin_getRecords(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getRecords(null, false, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getRecords(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getRecords(ctx__, true, false, cb__, cookie__);
        }

        private const string __getRecords_name = "getRecords";

        public _System.Collections.Generic.List<Hospital.PatientRecord> end_getRecords(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __getRecords_name);
            try
            {
                if(!outAsync__.wait())
                {
                    try
                    {
                        outAsync__.throwUserException();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                _System.Collections.Generic.List<Hospital.PatientRecord> ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams();
                ret__ = Hospital.recordsHelper.read(is__);
                is__.readPendingObjects();
                outAsync__.endReadParams();
                return ret__;
            }
            finally
            {
                outAsync__.cacheMessageBuffers();
            }
        }

        private Ice.AsyncResult<Hospital.Callback_Doctor_getRecords> begin_getRecords(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getRecords_name);
            IceInternal.TwowayOutgoingAsync<Hospital.Callback_Doctor_getRecords> result__ =  getTwowayOutgoingAsync<Hospital.Callback_Doctor_getRecords>(__getRecords_name, getRecords_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare(__getRecords_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                result__.writeEmptyParams();
                result__.invoke();
            }
            catch(Ice.Exception ex__)
            {
                result__.abort(ex__);
            }
            return result__;
        }

        private void getRecords_completed__(Ice.AsyncResult r__, Hospital.Callback_Doctor_getRecords cb__, Ice.ExceptionCallback excb__)
        {
            _System.Collections.Generic.List<Hospital.PatientRecord> ret__;
            try
            {
                ret__ = end_getRecords(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static DoctorPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            DoctorPrx r = b as DoctorPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                DoctorPrxHelper h = new DoctorPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static DoctorPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            DoctorPrx r = b as DoctorPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                DoctorPrxHelper h = new DoctorPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static DoctorPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    DoctorPrxHelper h = new DoctorPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static DoctorPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    DoctorPrxHelper h = new DoctorPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static DoctorPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            DoctorPrx r = b as DoctorPrx;
            if(r == null)
            {
                DoctorPrxHelper h = new DoctorPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static DoctorPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            DoctorPrxHelper h = new DoctorPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Hospital::Doctor",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        public static void write__(IceInternal.BasicStream os__, DoctorPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static DoctorPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                DoctorPrxHelper result = new DoctorPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Hospital
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public abstract class LabWorkerDisp_ : Ice.ObjectImpl, LabWorker
    {
        #region Slice operations

        public void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName)
        {
            addExamination(examination, patientFirstName, patientLastName, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void addExamination(Hospital.Examination examination, string patientFirstName, string patientLastName, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Hospital::LabWorker",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addExamination___(LabWorker obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string patientFirstName;
            string patientLastName;
            IceInternal.ParamPatcher<Hospital.Examination> examination__PP = new IceInternal.ParamPatcher<Hospital.Examination>(Hospital.Examination.ice_staticId());
            is__.readObject(examination__PP);
            patientFirstName = is__.readString();
            patientLastName = is__.readString();
            is__.readPendingObjects();
            inS__.endReadParams();
            obj__.addExamination(examination__PP.value, patientFirstName, patientLastName, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "addExamination",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return addExamination___(this, inS__, current__);
                }
                case 1:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 4:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public abstract class PatientDisp_ : Ice.ObjectImpl, Patient
    {
        #region Slice operations

        public Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName)
        {
            return getRecord(patientFirstName, patientLastName, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Hospital::Patient",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getRecord___(Patient obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string patientFirstName;
            string patientLastName;
            patientFirstName = is__.readString();
            patientLastName = is__.readString();
            inS__.endReadParams();
            Hospital.PatientRecord ret__ = obj__.getRecord(patientFirstName, patientLastName, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeObject(ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "getRecord",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return getRecord___(this, inS__, current__);
                }
                case 1:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 2:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 4:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
    public abstract class DoctorDisp_ : Ice.ObjectImpl, Doctor
    {
        #region Slice operations

        public _System.Collections.Generic.List<Hospital.PatientRecord> getRecords()
        {
            return getRecords(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract _System.Collections.Generic.List<Hospital.PatientRecord> getRecords(Ice.Current current__);

        public Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName)
        {
            return getRecord(patientFirstName, patientLastName, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Hospital.PatientRecord getRecord(string patientFirstName, string patientLastName, Ice.Current current__);

        public _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty()
        {
            return MVCMoreThanFifty(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract _System.Collections.Generic.List<Hospital.PatientRecord> MVCMoreThanFifty(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Hospital::Doctor",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getRecords___(Doctor obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            _System.Collections.Generic.List<Hospital.PatientRecord> ret__ = obj__.getRecords(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Hospital.recordsHelper.write(os__, ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getRecord___(Doctor obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string patientFirstName;
            string patientLastName;
            patientFirstName = is__.readString();
            patientLastName = is__.readString();
            inS__.endReadParams();
            Hospital.PatientRecord ret__ = obj__.getRecord(patientFirstName, patientLastName, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeObject(ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus MVCMoreThanFifty___(Doctor obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            _System.Collections.Generic.List<Hospital.PatientRecord> ret__ = obj__.MVCMoreThanFifty(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            Hospital.recordsHelper.write(os__, ret__);
            os__.writePendingObjects();
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "MVCMoreThanFifty",
            "getRecord",
            "getRecords",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return MVCMoreThanFifty___(this, inS__, current__);
                }
                case 1:
                {
                    return getRecord___(this, inS__, current__);
                }
                case 2:
                {
                    return getRecords___(this, inS__, current__);
                }
                case 3:
                {
                    return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                }
                case 4:
                {
                    return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                }
                case 5:
                {
                    return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                }
                case 6:
                {
                    return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }
}
